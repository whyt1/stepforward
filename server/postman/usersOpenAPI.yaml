openapi: 3.0.0
info:
  title: Step Forward Application API (Combined)
  description: Consolidated API documentation for the Step Forward application, including users and feedback.
  version: 1.0.0
servers:
  - url: https://stepforward.onrender.com/api
    description: Local development server
tags:
  - name: Users
    description: User management operations
  - name: Feedback
    description: Feedback management operations

paths:
  # Paths from usersOpenAPI.yaml
  /users:
    get:
      summary: Get all users
      operationId: getAllUsers
      tags:
        - Users
      responses:
        '200':
          description: A list of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create a new user
      operationId: createUser
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                  description: The email address of the user.
                password:
                  type: string
                  description: The password of the user.
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Email and password are required.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /users/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description: The ID of the user to retrieve, update, or delete.
    get:
      summary: Get user by ID
      operationId: getUserById
      tags:
        - Users
      responses:
        '200':
          description: User data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update user by ID
      operationId: updateUser
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The new name of the user.
                email:
                  type: string
                  format: email
                  description: The new email address of the user.
      responses:
        '200':
          description: User updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete user by ID
      operationId: deleteUser
      tags:
        - Users
      responses:
        '204':
          description: User deleted successfully (No Content)
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /users/login:
    post:
      summary: Log in user
      operationId: loginUser
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                  description: The email address of the user.
                password:
                  type: string
                  description: The password of the user.
      responses:
        '200':
          description: User logged in successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/User'
        '400':
          description: Email and password are required.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Invalid credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  # Paths from feedbackOpenAPI.yaml
  /feedback:
    post:
      summary: Submit feedback for a game
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Feedback'
      responses:
        '201':
          description: Feedback submitted successfully
        '400':
          description: Invalid input
    get:
      summary: Get all feedback
      responses:
        '200':
          description: List of feedback
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Feedback'
        '500':
          description: Server error
  /feedback/{game}: 
    get:
      summary: Get feedback for a specific game
      parameters:
        - in: path
          name: game
          required: true
          schema:
            type: string
          description: Name of the game to filter feedback
      responses:
        '200':
          description: List of feedback for the specified game
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Feedback'
        '500':
          description: Server error
  # games paths
  /games:
    get:
      summary: Get all games
      operationId: getAllGames
      tags:
        - Games
      responses:
        '200':
          description: A list of games
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Game'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Add a new game
      operationId: addGame
      tags:
        - Games
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Game'
      responses:
        '201':
          description: Game added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Game'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    # Schemas from usersOpenAPI.yaml
    User:
      type: object
      properties:
        _id:
          type: string
          description: The unique identifier of the user.
        email:
          type: string
          format: email
          description: The email address of the user.
        name:
          type: string
          description: The name of the user.
    Error:
      type: object
      properties:
        message:
          type: string
          description: A descriptive error message.

    # Schemas from feedbackOpenAPI.yaml
    Feedback:
      type: object
      properties:
        game:
          type: string
        educationalValue:
          type: integer
          minimum: 1
          maximum: 5
        engagementLevel:
          type: integer
          minimum: 1
          maximum: 5
        userInterface:
          type: integer
          minimum: 1
          maximum: 5
        comments:
          type: string

    # games schemas
    Game:
      type: object
      properties:
        title:
          type: string
          description: The title of the game.
        image:
          type: string
          description: URL or path to the game's image.
        description:
          type: string
          description: Description of the game.
        rating:
          type: number
          minimum: 0
          maximum: 5
          description: Rating of the game.
        downloadUrl:
          type: string
          description: URL or path to download the game.